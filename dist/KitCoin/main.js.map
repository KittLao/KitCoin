{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/block-view/block-view.component.ts","./src/app/components/block-view/block-view.component.html","./src/app/components/transactions-table/transactions-table.component.ts","./src/app/components/transactions-table/transactions-table.component.html","./src/app/pages/blockchain-viewer/blockchain-viewer.component.ts","./src/app/pages/blockchain-viewer/blockchain-viewer.component.html","./src/app/pages/create-transaction/create-transaction.component.ts","./src/app/pages/create-transaction/create-transaction.component.html","./src/app/pages/pending-transactions/pending-transactions.component.ts","./src/app/pages/pending-transactions/pending-transactions.component.html","./src/app/pages/settings/settings.component.ts","./src/app/pages/settings/settings.component.html","./src/app/pages/wallet-balance/wallet-balance.component.ts","./src/app/pages/wallet-balance/wallet-balance.component.html","./src/app/services/block-chain.service.ts","./src/environments/environment.ts","./src/main.ts","buffer (ignored)","crypto (ignored)"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","  \nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { BlockchainViewerComponent } from './pages/blockchain-viewer/blockchain-viewer.component';\nimport { SettingsComponent } from './pages/settings/settings.component';\nimport { CreateTransactionComponent } from './pages/create-transaction/create-transaction.component';\nimport { PendingTransactionsComponent } from './pages/pending-transactions/pending-transactions.component';\nimport { WalletBalanceComponent } from './pages/wallet-balance/wallet-balance.component';\n\nconst routes: Routes = [\n  {path: '', component: BlockchainViewerComponent },\n  {path: 'settings', component: SettingsComponent},\n  {path: 'new/transaction', component: CreateTransactionComponent },\n  {path: 'new/transaction/pending', component: PendingTransactionsComponent },\n  {path: 'wallet/:address', component: WalletBalanceComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { BlockChainService } from './services/block-chain.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\n\nexport class AppComponent implements OnInit {\n  public blockchain;\n  public showInfoMessage = true;\n\n  constructor(private blockchainService: BlockChainService) {\n    this.blockchain = blockchainService.blockchainInstance;\n  }\n\n  ngOnInit() {\n  }\n\n  thereArePendingTransactions() {\n    return this.blockchain.pendingTransactions.length > 0;\n  }\n\n  dismissInfoMessage() {\n    this.showInfoMessage = false;\n  }\n}\n","<nav class=\"navbar navbar-dark bg-dark\">\n  <a class=\"navbar-brand\" routerLink=\"/\">\n    <img src=\"assets/images/logo.png\" width=\"30\" \n    height=\"30\" class=\"d-inline-block align-top\" alt=\"\">\n    &nbsp;KitCoin\n  </a>\n\n  <div>\n    <button routerLink=\"/new/transaction/pending\" class=\"btn btn-outline-light\" *ngIf=\"thereArePendingTransactions()\">\n      Pending transactions\n      <span class=\"badge badge-light\">{{blockchain.pendingTransactions.length}}</span>\n    </button>\n    &nbsp;\n    <button routerLink=\"/settings\" class=\"btn btn-outline-light\">\n      Settings\n    </button>\n    &nbsp;\n    <button routerLink=\"/new/transaction\" class=\"btn btn-outline-light\">\n      Create transaction\n    </button>\n  </div>\n</nav>\n\n<br>\n\n<router-outlet></router-outlet>\n\n<footer class=\"text-muted text-center\" style=\"margin-top: 150px;\">\n  <small> &#169; Copyrights of Kit Lao. </small> \n  <br>\n</footer>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { BlockChainService } from './services/block-chain.service';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BlockchainViewerComponent } from './pages/blockchain-viewer/blockchain-viewer.component';\nimport { BlockViewComponent } from './components/block-view/block-view.component';\nimport { TransactionsTableComponent } from './components/transactions-table/transactions-table.component';\nimport { CreateTransactionComponent } from './pages/create-transaction/create-transaction.component';\nimport { PendingTransactionsComponent } from './pages/pending-transactions/pending-transactions.component';\nimport { SettingsComponent } from './pages/settings/settings.component';\nimport { WalletBalanceComponent } from './pages/wallet-balance/wallet-balance.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    BlockchainViewerComponent,\n    BlockViewComponent,\n    TransactionsTableComponent,\n    CreateTransactionComponent,\n    PendingTransactionsComponent,\n    SettingsComponent,\n    WalletBalanceComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule\n  ],\n  providers: [\n    BlockChainService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit, Input } from '@angular/core';\nimport { BlockChainService } from '../../services/block-chain.service';\n\n@Component({\n  selector: 'app-block-view',\n  templateUrl: './block-view.component.html',\n  styleUrls: ['./block-view.component.scss']\n})\nexport class BlockViewComponent implements OnInit {\n  @Input()\n  public block;\n\n  @Input()\n  public selectedBlock;\n\n  private blocksInChain;\n\n  constructor(private blockchainService: BlockChainService) {\n    this.blocksInChain = blockchainService.blockchainInstance.chain;\n  }\n\n\n  ngOnInit() {  }\n\n  blockHasTx() {\n    return this.block.transactions.length > 0;\n  }\n\n  isSelectedBlock() {\n    return this.block === this.selectedBlock;\n  }\n\n  getBlockNumber() {\n    return this.blocksInChain.indexOf(this.block) + 1;\n  }\n}\n","<div class=\"card\" [class.border-primary]=\"isSelectedBlock()\">\n    <div class=\"card-body\">\n      <h5 class=\"card-title\">Block {{ getBlockNumber() }} \n\t\t\t<small class=\"text-muted\" *ngIf=\"block.previousHash == 0\">\n\t\t\t\t(Genesis block)\n\t\t\t</small>\n\t\t</h5>\n    </div>\n\n     <ul class=\"list-group list-group-flush\">\n\t    <li class=\"list-group-item\">\n\t    \t<span class=\"\">Hash</span>\n\t    \t<br>\n\t\t\t<div class=\"text-truncate\" \n\t\t\t[style.color]=\"'#' + block.hash.substring(0,6)\">\n\t    \t\t<small>{{ block.hash }}</small>\n\t    \t</div>\n\n\t\t\t<br>\n\t\t\t<span class=\"\">Hash of previous block</span>\n\t    \t<br>\n\n\t\t\t<div class=\"text-truncate\" \n\t\t\t[style.color]=\"'#' + block.previousHash.substring(0,6)\">\n\t    \t\t<small>{{ block.previousHash }}</small>\n\t    \t</div>\n\t    </li>\n\n\t    <li class=\"list-group-item\">\n\t    \t<span class=\"\">Nonce</span><br>\n\t    \t<div class=\"text-truncate text-muted\">\n\t    \t\t<small>{{ block.nonce }}</small>\n\t    \t</div>\n\t    </li>\n\n\t    <li class=\"list-group-item\">\n\t    \t<span class=\"\">Timestamp</span><br>\n\t    \t<div class=\"text-truncate text-muted\">\n\t    \t\t<small>{{ block.timestamp }}</small>\n\t    \t</div>\n\t    </li>\n\t  </ul>\n\n\t  <!-- <div class=\"card-body\">\n\t  \t<span class=\"card-link\" *ngIf=\"!blockHasTx()\">Block has no transactions</span>\n\t  \t<span class=\"card-link\" *ngIf=\"blockHasTx()\">Contains {{block.transactions.length}} transactions</span>\n\t  </div> -->\n  </div>","import { Component, OnInit, Input } from '@angular/core';\nimport { BlockChainService } from '../../services/block-chain.service';\n\n@Component({\n  selector: 'app-transactions-table',\n  templateUrl: './transactions-table.component.html',\n  styleUrls: ['./transactions-table.component.scss']\n})\nexport class TransactionsTableComponent implements OnInit {\n  @Input()\n  public transactions = [];\n\n  constructor(public blockchainService: BlockChainService) { }\n\n  ngOnInit() {\n  }\n}\n","<p *ngIf=\"transactions.length === 0\">This block has no transactions</p>\n\n<table class=\"table table-hover table-striped\" *ngIf=\"transactions.length > 0\">\n  <thead>\n    <tr>\n      <th scope=\"col\">#</th>\n      <th scope=\"col\">From</th>\n      <th scope=\"col\">To</th>\n      <th scope=\"col\">Amount</th>\n      <th scope=\"col\">Timestamp</th>\n      <th scope=\"col\">Valid?</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr *ngFor=\"let tx of transactions; index as index\">\n      <td>{{index}}</td>\n      <td class=\"text-truncate\" style=\"max-width: 100px;\">\n\n        <a [routerLink]=\"['/wallet', tx.fromAddress]\" *ngIf=\"tx.fromAddress !== null\">{{tx.fromAddress}}</a>\n\n        <span *ngIf=\"tx.fromAddress === null\">System</span>\n\n        <span class=\"text-muted\" *ngIf=\"blockchainService.addressIsFromCurrentUser(tx.fromAddress)\">\n          <br><small>(That's yours!)</small>\n        </span>\n      </td>\n      <td class=\"text-truncate\" style=\"max-width: 100px;\">\n          <a [routerLink]=\"['/wallet', tx.toAddress]\">{{tx.toAddress}}</a>\n\n          <span class=\"text-muted\" *ngIf=\"blockchainService.addressIsFromCurrentUser(tx.toAddress)\">\n            <br><small>(That's yours!)</small>\n          </span>\n      </td>\n      <td>\n        {{tx.amount}}\n        <span *ngIf=\"tx.fromAddress === null\" class=\"text-muted\"><br><small>(Block reward)</small></span>\n      </td>\n      <td>\n        {{tx.timestamp}}<br>\n        <span class=\"text-muted\"><small>{{tx.timestamp |date:'MMM d, y, HH:mm'}}</small></span>\n      </td>\n      <td style=\"max-width: 40px;\">\n        <span *ngIf=\"tx.isValid()\">✓</span>\n        <span *ngIf=\"!tx.isValid()\">✗</span>\n      </td>\n    </tr>\n  </tbody>\n</table>","import { Component, OnInit, Input } from '@angular/core';\nimport { BlockChainService } from '../../services/block-chain.service';\n\n@Component({\n  selector: 'app-blockchain-viewer',\n  templateUrl: './blockchain-viewer.component.html',\n  styleUrls: ['./blockchain-viewer.component.scss']\n})\nexport class BlockchainViewerComponent implements OnInit {\n\n  public blocks = [];\n  public selectedBlock = null;\n\n  constructor(private blockchainService: BlockChainService) {\n    this.blocks = blockchainService.blockchainInstance.chain;\n    this.selectedBlock = this.blocks[0];\n    console.log(this.blocks);\n  }\n\n  ngOnInit() {\n  }\n\n  showTransactions(block) {\n    console.log(block);\n    this.selectedBlock = block;\n    return false;\n  }\n\n  blockHasTx(block) {\n    return block.transactions.length > 0;\n  }\n\n  selectedBlockHasTx() {\n    return this.blockHasTx(this.selectedBlock);\n  }\n\n  isSelectedBlock(block) {\n    return this.selectedBlock === block;\n  }\n\n  getBlockNumber(block) {\n    return this.blocks.indexOf(block) + 1;\n  }\n}","<!-- Header -->\n<div class=\"container\">\n\t<h1>Blocks on chain</h1>\n\t<p>Each card represents a block on the chain. Click on a block to see the transactions stored inside.</p>\n</div>\n\n<!-- Iterate through blocks and show them to the screen. -->\n<div class=\"container\" style=\"overflow-x: scroll;white-space: nowrap;\">\n\t<app-block-view \n\t\t*ngFor=\"let block of blocks\" [block]=\"block\" \n\t\t[selectedBlock]=\"selectedBlock\" (click)=\"showTransactions(block)\"\n\t></app-block-view>\n</div>\n\n<br><br>\n\n<!-- Show the transactions made when a block is selected -->\n<div class=\"container\">\n\t<h1>Transactions inside block {{ getBlockNumber(selectedBlock) }}</h1>\n\n\t<app-transactions-table\n\t\t[transactions]=\"selectedBlock.transactions\"\n\t></app-transactions-table>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { BlockChainService, IWalletKey } from '../../services/block-chain.service';\nimport { Transaction } from 'blockchain/src/transaction';\n\n@Component({\n  selector: 'app-create-transaction',\n  templateUrl: './create-transaction.component.html',\n  styleUrls: ['./create-transaction.component.scss']\n})\nexport class CreateTransactionComponent implements OnInit {\n  public newTx: Transaction;\n  public ownWalletKey: IWalletKey;\n\n  constructor(private blockchainService: BlockChainService, private router: Router) {\n    this.newTx = new Transaction();\n    this.ownWalletKey = blockchainService.walletKeys[0];\n  }\n\n  ngOnInit() {\n  }\n\n  createTransaction() {\n    const newTx = this.newTx;\n\n    // Set the FROM address and sign the transaction\n    newTx.fromAddress = this.ownWalletKey.publicKey;\n    newTx.signTransaction(this.ownWalletKey.keyObj);\n\n    try {\n      this.blockchainService.addTransaction(this.newTx);\n    } catch (e) {\n      alert(e);\n      return;\n    }\n\n    this.router.navigate(['/new/transaction/pending', { addedTx: true }]);\n    this.newTx = new Transaction();\n  }\n}\n","<div class=\"container\">\n\t<h1>Create transaction</h1>\n\t<p>Transfer some money to someone!</p>\n\n\t<br>\n\n\t<div class=\"form-group\">\n\t\t<label for=\"fromAddress\">From address</label>\n\t\t\n\t\t<input type=\"text\" class=\"form-control\" \n\t\tid=\"fromAddress\" aria-describedby=\"fromAddressHelp\" \n\t\t[(ngModel)]=\"ownWalletKey.publicKey\" disabled>\n\n\t    <small id=\"fromAddressHelp\" class=\"form-text text-muted\">\n\t    \tThis is your wallet address. You cannot change it because you can only spend your own coins.\n\t    </small>\n  \t</div>\n\n  \t<div class=\"form-group\">\n\t\t<label for=\"toAddress\">To address</label>\n\t\t\n\t\t<input type=\"text\" class=\"form-control\" \n\t\tid=\"toAddress\" aria-describedby=\"toAddressHelp\" \n\t\t[(ngModel)]=\"newTx.toAddress\">\n\n\t    <small id=\"toAddressHelp\" class=\"form-text text-muted\">\n\t    \tThe address of the wallet where you want to send the money to. You can type random text here (if you are not interested in recovering the funds)\n\t    </small>\n  \t</div>\n\n  \t<div class=\"form-group\">\n\t\t<label for=\"amount\">Amount</label>\n\t\t\n\t\t<input type=\"number\" class=\"form-control\" \n\t\tid=\"amount\" aria-describedby=\"amountHelp\" \n\t\t[(ngModel)]=\"newTx.amount\">\n\n\t    <small id=\"amountHelp\" class=\"form-text text-muted\">\n\t    \tYou can transfer any amount. Account balance is not checked in this demo. Have at it!\n\t    </small>\n  \t</div>\n\n\t<button (click)=\"createTransaction()\" type=\"submit\" \n\t  class=\"btn btn-primary\">\n\t\t  Sign & create transaction\n\t</button>\n\n</div>","\nimport { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { BlockChainService } from '../../services/block-chain.service';\n\n@Component({\n  selector: 'app-pending-transactions',\n  templateUrl: './pending-transactions.component.html',\n  styleUrls: ['./pending-transactions.component.scss']\n})\nexport class PendingTransactionsComponent implements OnInit {\n  public pendingTransactions = [];\n  public miningInProgress = false;\n  public justAddedTx = false;\n\n  constructor(private blockchainService: BlockChainService, private router: Router, private route: ActivatedRoute) {\n    this.pendingTransactions = blockchainService.getPendingTransactions();\n  }\n\n  ngOnInit() {\n    if (this.route.snapshot.paramMap.get('addedTx')) {\n      this.justAddedTx = true;\n\n      setTimeout(() => {\n        this.justAddedTx = false;\n      }, 4000);\n    }\n  }\n\n  minePendingTransactions() {\n    this.miningInProgress = true;\n    this.blockchainService.minePendingTransactions();\n    this.miningInProgress = false;\n    this.router.navigate(['/']);\n  }\n}\n","\n<div class=\"container\">\n\n\t<div class=\"alert alert-success\" role=\"alert\" *ngIf=\"justAddedTx\">\n\t\tTransaction created successfully!\n\t</div>\n\n\t<h1>Pending transactions</h1>\n\t<p>These transactions are waiting to be included in the next block. Next block is created when you start the mining process.</p>\n\n\t<app-transactions-table\n\t\t[transactions]=\"pendingTransactions\">\n\t</app-transactions-table>\n\n\t <button class=\"btn btn-primary\" *ngIf=\"pendingTransactions.length > 0 && miningInProgress === false\" (click)=\"minePendingTransactions()\">\n     \tStart mining\n    </button>\n\n    <div *ngIf=\"miningInProgress === true\">\n    \tMining block.. Hang on...\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { BlockChainService } from '../../services/block-chain.service';\n\n@Component({\n  selector: 'app-settings',\n  templateUrl: './settings.component.html',\n  styleUrls: ['./settings.component.scss']\n})\nexport class SettingsComponent implements OnInit {\n  public blockchain;\n\n  constructor(private blockchainService: BlockChainService) {\n    this.blockchain = blockchainService.blockchainInstance;\n  }\n\n  ngOnInit() {\n  }\n}","<div class=\"container\">\n    <h1>Settings</h1>\n    <p>Control how the blockchain behaves when new transactions or blocks are created. Changes are automatically saved.</p>\n  \n    <br>\n  \n    <div class=\"form-group\">\n      <label for=\"difficulty\">Difficulty</label>\n      <input type=\"number\" class=\"form-control\" id=\"difficulty\" aria-describedby=\"difficultyHelp\" [(ngModel)]=\"blockchain.difficulty\">\n      <small id=\"difficultyHelp\" class=\"form-text text-muted\">\n          Difficulty controls how long the mining process takes. Higher numbers will make mining a lot slower!\n          <br>Default: 2\n      </small>\n    </div>\n  \n    <br>\n  \n    <div class=\"form-group\">\n      <label for=\"miningReward\">Mining reward</label>\n      <input type=\"number\" class=\"form-control\" id=\"miningReward\" aria-describedby=\"miningRewardHelp\" [(ngModel)]=\"blockchain.miningReward\">\n      <small id=\"miningRewardHelp\" class=\"form-text text-muted\">\n          How much \"coins\" a miner receives for successfully creating a new block for the chain.\n          <br>Default: 100\n      </small>\n    </div>\n  \n  </div>","\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { BlockChainService } from '../../services/block-chain.service';\n\n@Component({\n  selector: 'app-wallet-balance',\n  templateUrl: './wallet-balance.component.html',\n  styleUrls: ['./wallet-balance.component.scss']\n})\nexport class WalletBalanceComponent implements OnInit {\n  public walletAddress = '';\n  public balance = 0;\n  public transactions = [];\n\n  constructor(private route: ActivatedRoute, private blockchainService: BlockChainService) {}\n\n  ngOnInit() {\n    this.route.params.subscribe( (params) => {\n        this.walletAddress = params['address'];\n\n        const blockchain = this.blockchainService.blockchainInstance;\n        this.balance = blockchain.getBalanceOfAddress(this.walletAddress);\n        this.transactions = blockchain.getAllTransactionsForWallet(this.walletAddress);\n    });\n  }\n\n}\n","<div class=\"container\">\n\t<h1>Wallet details</h1>\n\n\t<p style=\"word-wrap:break-word;\">\n\t\t<strong>Address:</strong>\n\t\t<br>\n\t\t{{walletAddress}}\n\t</p>\n\n\t<p>\n\t\t<strong>Balance:</strong>\n\t\t<br>\n\t\t{{ balance }}\n\t</p>\n\n\t<hr>\n\n\t<h1>Transactions</h1>\n\t<p *ngIf=\"transactions.length === 0\">This wallet has made no transactions (yet)</p>\n\t<app-transactions-table\n\t\t[transactions]=\"transactions\"\n\t\t*ngIf=\"transactions.length > 0\"\n\t></app-transactions-table>\n</div>","import { Injectable } from '@angular/core';\nimport { BlockChain } from 'blockchain/src/BlockChain';\nimport EC from \"elliptic\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BlockChainService {\n  public blockchainInstance : BlockChain;\n  \n  public walletKeys: Array<IWalletKey>;\n\n  constructor() {\n    this.blockchainInstance = new BlockChain();\n    this.walletKeys = [];\n    this.blockchainInstance.difficulty = 1;\n    this.blockchainInstance.minePendingTransactions('Kit Lao');\n    this.generateWalletKeys();\n  }\n\n  minePendingTransactions() {\n    this.blockchainInstance.minePendingTransactions(\n      this.walletKeys[0].publicKey\n    );\n  }\n\n  addressIsFromCurrentUser(address) {\n    return address === this.walletKeys[0].publicKey;\n  }\n\n  generateWalletKeys() {\n    const ec = new EC.ec('secp256k1');\n    const key = ec.genKeyPair();\n\n    this.walletKeys.push({\n      keyObj: key,\n      publicKey: key.getPublic('hex'),\n      privateKey: key.getPrivate('hex'),\n    });\n\n    console.log(this.walletKeys);\n  }\n\n  getPendingTransactions() {\n    return this.blockchainInstance.pendingTransactions;\n  }\n\n  addTransaction(tx) {\n    this.blockchainInstance.addTransaction(tx);\n  }\n}\n\nexport interface IWalletKey {\n  keyObj: any;\n  publicKey: string;\n  privateKey: string;\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","/* (ignored) */","/* (ignored) */"],"sourceRoot":"webpack:///"}